package com.mitian.airad.dao.impl;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.apache.log4j.Logger;
import org.springframework.stereotype.Repository;

import com.mitian.airad.dao.StatAgentDAO;
import com.mitian.airad.dao.support.CustomSqlMapClientDaoSupport;
import com.mitian.airad.model.StatAgent;
import com.mitian.airad.utils.StringUtil;

@Repository
public class StatAgentDAOImpl extends CustomSqlMapClientDaoSupport implements StatAgentDAO {
    Logger log = Logger.getLogger(StatAgentDAOImpl.class);

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table STAT_AGENT
     * 
     * @ibatorgenerated Thu Mar 10 14:17:51 CST 2011
     */
    public StatAgentDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table STAT_AGENT
     * 
     * @ibatorgenerated Thu Mar 10 14:17:51 CST 2011
     */
    public int deleteByPrimaryKey(Integer shatAngenId) {
        StatAgent key = new StatAgent();
        key.setShatAngenId(shatAngenId);
        int rows = getSqlMapClientTemplate().delete("STAT_AGENT.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table STAT_AGENT
     * 
     * @ibatorgenerated Thu Mar 10 14:17:51 CST 2011
     */
    public void insert(StatAgent record) {
        getSqlMapClientTemplate().insert("STAT_AGENT.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table STAT_AGENT
     * 
     * @ibatorgenerated Thu Mar 10 14:17:51 CST 2011
     */
    public void insertSelective(StatAgent record) {
        getSqlMapClientTemplate().insert("STAT_AGENT.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table STAT_AGENT
     * 
     * @ibatorgenerated Thu Mar 10 14:17:51 CST 2011
     */
    public StatAgent selectByPrimaryKey(Integer shatAngenId) {
        StatAgent key = new StatAgent();
        key.setShatAngenId(shatAngenId);
        StatAgent record =
                (StatAgent) getSqlMapClientTemplate().queryForObject("STAT_AGENT.ibatorgenerated_selectByPrimaryKey",
                        key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table STAT_AGENT
     * 
     * @ibatorgenerated Thu Mar 10 14:17:51 CST 2011
     */
    public int updateByPrimaryKeySelective(StatAgent record) {
        int rows = getSqlMapClientTemplate().update("STAT_AGENT.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table STAT_AGENT
     * 
     * @ibatorgenerated Thu Mar 10 14:17:51 CST 2011
     */
    public int updateByPrimaryKey(StatAgent record) {
        int rows = getSqlMapClientTemplate().update("STAT_AGENT.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * 报表查询(分页)
     */
    @SuppressWarnings("unchecked")
    public List<StatAgent> queryAngenTotalList(Map<String, String> map) {
        int pageSize = StringUtil.StringToInteger(map.get("pageSize"));
        int currentPage = StringUtil.StringToInteger(map.get("currentPage")) - 1;
        int fromRecord = pageSize * currentPage;
        map.put("fromRecord", String.valueOf(fromRecord));
        map.put("pageSize", String.valueOf(pageSize));
        List<StatAgent> list = getSqlMapClientTemplate().queryForList("STAT_AGENT.queryAngenTotalList", map);
        if (list.isEmpty()) {
            list = new ArrayList<StatAgent>();
        }
        return list;
    }

    @SuppressWarnings("unchecked")
    public List<StatAgent> queryAngenDetailList(Map<String, String> map) {
        int pageSize = StringUtil.StringToInteger(map.get("pageSize"));
        int currentPage = StringUtil.StringToInteger(map.get("currentPage")) - 1;
        int fromRecord = pageSize * currentPage;
        map.put("fromRecord", String.valueOf(fromRecord));
        map.put("pageSize", String.valueOf(pageSize));
        List<StatAgent> list = getSqlMapClientTemplate().queryForList("STAT_AGENT.queryAngenDetailList", map);
        if (list.isEmpty()) {
            list = new ArrayList<StatAgent>();
        }
        return list;
    }

    /**
     * 报表查询(所有)
     */
    @SuppressWarnings("unchecked")
    public List<StatAgent> selectAngenTotalList(Map<String, String> map) {
        List<StatAgent> list = getSqlMapClientTemplate().queryForList("STAT_AGENT.queryAngenTotalList", map);
        if (list.isEmpty()) {
            list = new ArrayList<StatAgent>();
        }
        return list;
    }

    @SuppressWarnings("unchecked")
    public List<StatAgent> selectAngenDetailList(Map<String, String> map) {
        List<StatAgent> list = getSqlMapClientTemplate().queryForList("STAT_AGENT.queryAngenDetailList", map);
        if (list.isEmpty()) {
            list = new ArrayList<StatAgent>();
        }
        return list;
    }

    public int statCountAgent(StatAgent paramStatAgent) {
        Integer count =
                (Integer) getSqlMapClientTemplate().queryForObject("JOB_APP_AD_AGENT.agentCountStat", paramStatAgent);
        return count;
    }

    @SuppressWarnings("unchecked")
    public List<StatAgent> limitStatAgentList(StatAgent paramStatAgent) {
        return getSqlMapClientTemplate().queryForList("JOB_APP_AD_AGENT.JOB_AGENT", paramStatAgent);
    }

    public void addJobStatAgent(StatAgent statAgent) {
        getSqlMapClientTemplate().insert("STAT_AGENT.ibatorgenerated_insertSelective", statAgent);
    }
}
