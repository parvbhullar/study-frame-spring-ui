package com.mitian.airad.dao.impl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.mitian.airad.CommonDef;
import com.mitian.airad.dao.BssUserInfoDAO;
import com.mitian.airad.dao.support.CustomSqlMapClientDaoSupport;
import com.mitian.airad.model.BssUserInfo;
import com.mitian.airad.model.CoreApp;
import com.mitian.airad.utils.StringUtil;

/***
 * 后台用户管理
 * 
 * @author Administrator
 */
@Repository
public class BssUserInfoDAOImpl extends CustomSqlMapClientDaoSupport implements BssUserInfoDAO {

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table BSS_USER_INFO
     * 
     * @ibatorgenerated Wed Mar 09 14:56:24 CST 2011
     */
    public BssUserInfoDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table BSS_USER_INFO
     * 
     * @ibatorgenerated Wed Mar 09 14:56:24 CST 2011
     */
    public int deleteByPrimaryKey(Integer userId) {
        BssUserInfo key = new BssUserInfo();
        key.setUserId(userId);
        key.setUserStatus("0");
        int rows = getSqlMapClientTemplate().delete("BSS_USER_INFO.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table BSS_USER_INFO
     * 添加后台用户
     * 
     * @ibatorgenerated Wed Mar 09 14:56:24 CST 2011
     */
    public void insert(BssUserInfo record) {
        getSqlMapClientTemplate().insert("BSS_USER_INFO.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table BSS_USER_INFO
     * 
     * @ibatorgenerated Wed Mar 09 14:56:24 CST 2011
     */
    public void insertSelective(BssUserInfo record) {
        getSqlMapClientTemplate().insert("BSS_USER_INFO.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table BSS_USER_INFO
     * 
     * @ibatorgenerated Wed Mar 09 14:56:24 CST 2011
     */
    public BssUserInfo selectByPrimaryKey(Integer userId) {
        BssUserInfo key = new BssUserInfo();
        key.setUserId(userId);
        BssUserInfo record =
                (BssUserInfo) getSqlMapClientTemplate().queryForObject(
                        "BSS_USER_INFO.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table BSS_USER_INFO
     * 更新用户信息
     * 
     * @ibatorgenerated Wed Mar 09 14:56:24 CST 2011
     */
    public int updateByPrimaryKeySelective(BssUserInfo record) {
        int rows =
                getSqlMapClientTemplate().update("BSS_USER_INFO.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table BSS_USER_INFO
     * 
     * @ibatorgenerated Wed Mar 09 14:56:24 CST 2011
     */
    public int updateByPrimaryKey(BssUserInfo record) {
        int rows = getSqlMapClientTemplate().update("BSS_USER_INFO.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * 查询后台用户列表
     */
    public List<BssUserInfo> findUserInfoList(BssUserInfo record, int fromRecord, int pageSize) {
        String userStatus = record.getUserStatus();
        System.out.println(userStatus);
        Map<String, Object> key = new HashMap<String, Object>();

        key.put("userStatus", userStatus);
        List<BssUserInfo> list = new ArrayList<BssUserInfo>();
        list = getSqlMapClientTemplate().queryForList("BSS_USER_INFO.selectByUserStatusKey", key, fromRecord, pageSize);

        return list;
    }

    /*
     * (non-Javadoc)
     * @see com.mitian.airad.dao.BssUserInfoDAO#findAdminUserInfoCount(com.mitian.airad.model.BssUserInfo)
     */
    public int findAdminUserInfoCount(BssUserInfo buInfo) {
        Map<String, String> key = new HashMap<String, String>();
        key.put("userStatus", buInfo.getUserStatus());
        int count = 0;
        count = (Integer) getSqlMapClientTemplate().queryForObject("BSS_USER_INFO.selectAdminUserInfoCount", key);
        return count;
    }

    public BssUserInfo findAdminUserInfoById(Integer userId) {
        Map<String, Integer> key = new HashMap<String, Integer>();
        key.put("userId", userId);
        return (BssUserInfo) getSqlMapClientTemplate().queryForObject("BSS_USER_INFO.selectByuserIdKey", key);
    }

    // 条件查询用户数量
    public int findAdminUserSize(BssUserInfo buInfo) {
        int size = 0;
        size = (Integer) getSqlMapClientTemplate().queryForObject("BSS_USER_INFO.selectAllCountByCondition", buInfo);
        return size;
    }

    // 条件查询用户
    public List<BssUserInfo> querylistbeanbyConds(Map<String, Object> params) {
        int pageSize = StringUtil.StringToInteger(params.get("pageSize").toString());
        int currentPage = StringUtil.StringToInteger(params.get("currentPage").toString()) - 1;
        int fromRecord = pageSize * currentPage;
        // BssUserInfo key=new BssUserInfo();
        // Integer.parseInt()
        //
        // key.setUserId(Integer.parseInt(params.get("userId")));
        // key.setUserName(params.get("userName"));
        // key.setDepartment(params.get("department"));
        // key.setUserStatus("1");

        List<BssUserInfo> record =
                getSqlMapClientTemplate()
                        .queryForList("BSS_USER_INFO.findListAdminUserByUserIdAndUserNameAndDepartment", params,
                                fromRecord, pageSize);

        return record;
    }

}
