package com.mitian.airad.dao.impl;

import java.util.Map;

import org.springframework.stereotype.Repository;

import com.mitian.airad.dao.CoreAdvertiserImgDAO;
import com.mitian.airad.dao.support.CustomSqlMapClientDaoSupport;
import com.mitian.airad.model.CoreAdvertiserImg;

@Repository
public class CoreAdvertiserImgDAOImpl extends CustomSqlMapClientDaoSupport implements CoreAdvertiserImgDAO {

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table
     * CORE_ADVERTISER_IMG
     * 
     * @ibatorgenerated Sat Feb 12 18:14:21 CST 2011
     */
    public CoreAdvertiserImgDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table
     * CORE_ADVERTISER_IMG
     * 
     * @ibatorgenerated Sat Feb 12 18:14:21 CST 2011
     */
    public int deleteByPrimaryKey(Integer cardImgId) {
        CoreAdvertiserImg key = new CoreAdvertiserImg();
        key.setCardImgId(cardImgId);
        int rows = getSqlMapClientTemplate().delete("CORE_ADVERTISER_IMG.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table
     * CORE_ADVERTISER_IMG
     * 
     * @ibatorgenerated Sat Feb 12 18:14:21 CST 2011
     */
    public void insert(CoreAdvertiserImg record) {
        getSqlMapClientTemplate().insert("CORE_ADVERTISER_IMG.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table
     * CORE_ADVERTISER_IMG
     * 
     * @ibatorgenerated Sat Feb 12 18:14:21 CST 2011
     */
    public void insertSelective(CoreAdvertiserImg record) {
        getSqlMapClientTemplate().insert("CORE_ADVERTISER_IMG.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table
     * CORE_ADVERTISER_IMG
     * 
     * @ibatorgenerated Sat Feb 12 18:14:21 CST 2011
     */
    public CoreAdvertiserImg selectByPrimaryKey(Integer cardImgId) {
        CoreAdvertiserImg key = new CoreAdvertiserImg();
        key.setCardImgId(cardImgId);
        CoreAdvertiserImg record =
                (CoreAdvertiserImg) getSqlMapClientTemplate().queryForObject(
                        "CORE_ADVERTISER_IMG.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table
     * CORE_ADVERTISER_IMG
     * 
     * @ibatorgenerated Sat Feb 12 18:14:21 CST 2011
     */
    public int updateByPrimaryKeySelective(CoreAdvertiserImg record) {
        int rows =
                getSqlMapClientTemplate().update("CORE_ADVERTISER_IMG.ibatorgenerated_updateByPrimaryKeySelective",
                        record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table
     * CORE_ADVERTISER_IMG
     * 
     * @ibatorgenerated Sat Feb 12 18:14:21 CST 2011
     */
    public int updateByPrimaryKeyWithBLOBs(CoreAdvertiserImg record) {
        int rows =
                getSqlMapClientTemplate().update("CORE_ADVERTISER_IMG.ibatorgenerated_updateByPrimaryKeyWithBLOBs",
                        record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table
     * CORE_ADVERTISER_IMG
     * 
     * @ibatorgenerated Sat Feb 12 18:14:21 CST 2011
     */
    public int updateByPrimaryKeyWithoutBLOBs(CoreAdvertiserImg record) {
        int rows = getSqlMapClientTemplate().update("CORE_ADVERTISER_IMG.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * 每天认证的次数
     * 
     * @param record
     * @return
     */
    public Integer selectAuthentication(Map<String, String> map) {
        Integer rows =
                (Integer) getSqlMapClientTemplate().queryForObject("CORE_ADVERTISER_IMG.selectAuthentication", map);
        if (rows == null || rows.equals("")) {
            rows = -1;
        }
        return rows;
    }

    /*
     * 根据memberId更新
     */
    public int updateAdvertiserImgBymemberId(CoreAdvertiserImg record) {
        Integer rows = getSqlMapClientTemplate().update("CORE_ADVERTISER_IMG.updateAdvertiserImgBymemberId", record);
        return rows;
    }
}
