package com.mitian.airad.dao.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.mitian.airad.dao.DictionaryDAO;
import com.mitian.airad.dao.support.CustomSqlMapClientDaoSupport;
import com.mitian.airad.model.Dictionary;

@Repository
public class DictionaryDAOImpl extends CustomSqlMapClientDaoSupport implements DictionaryDAO {

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table DICTIONARY
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     */
    public DictionaryDAOImpl() {
        super();
    }

    @SuppressWarnings("unchecked")
    public List<Dictionary> findList() {
        return getSqlMapClientTemplate().queryForList("DICTIONARY.ibatorgenerated_findList");
    }

    public List<Dictionary> findIndustryInvolvedList() {
        return getSqlMapClientTemplate().queryForList("DICTIONARY.ibatorgenerated_industryInvolved");
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table DICTIONARY
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     */
    public int deleteByPrimaryKey(Integer dictId) {
        Dictionary key = new Dictionary();
        key.setDictId(dictId);
        int rows = getSqlMapClientTemplate().delete("DICTIONARY.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table DICTIONARY
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     */
    public void insert(Dictionary record) {
        getSqlMapClientTemplate().insert("DICTIONARY.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table DICTIONARY
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     */
    public void insertSelective(Dictionary record) {
        getSqlMapClientTemplate().insert("DICTIONARY.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table DICTIONARY
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     */
    public Dictionary selectByPrimaryKey(Integer dictId) {
        Dictionary key = new Dictionary();
        key.setDictId(dictId);
        Dictionary record =
                (Dictionary) getSqlMapClientTemplate().queryForObject("DICTIONARY.ibatorgenerated_selectByPrimaryKey",
                        key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table DICTIONARY
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     */
    public int updateByPrimaryKeySelective(Dictionary record) {
        int rows = getSqlMapClientTemplate().update("DICTIONARY.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table DICTIONARY
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     */
    public int updateByPrimaryKey(Dictionary record) {
        int rows = getSqlMapClientTemplate().update("DICTIONARY.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /*
     * (non-Javadoc)
     * @see com.mitian.airad.dao.DictionaryDAO#findListByType(java.lang.String, java.lang.String)
     */
    public List<Dictionary> findListByType(String type1, String type2) {
        Map<String, String> key = new HashMap<String, String>();
        key.put("dictType1", type1);
        key.put("dictType2", type2);
        return getSqlMapClientTemplate().queryForList("DICTIONARY.ibatorgenerated_findListByType", key);
    }

    /*
     * (non-Javadoc)
     * @see com.mitian.airad.dao.DictionaryDAO#getAll()
     */
    public List<Dictionary> getAll() {
        return getSqlMapClientTemplate().queryForList("DICTIONARY.getAll");
    }
}
