package com.mitian.airad.dao.impl;

import java.util.List;

import org.apache.commons.collections.CollectionUtils;
import org.springframework.stereotype.Repository;

import com.mitian.airad.dao.DictionaryGlobalRegionDAO;
import com.mitian.airad.dao.support.CustomSqlMapClientDaoSupport;
import com.mitian.airad.model.DictionaryGlobalRegion;

@Repository
public class DictionaryGlobalRegionDAOImpl extends CustomSqlMapClientDaoSupport implements DictionaryGlobalRegionDAO {

    public List<DictionaryGlobalRegion> findProvList(DictionaryGlobalRegion dictionaryGlobalRegion) {
        return getSqlMapClientTemplate().queryForList("DICTIONARY_GLOBAL_REGION.selectAllPro", dictionaryGlobalRegion);
    }

    public List<DictionaryGlobalRegion> findCityList(DictionaryGlobalRegion dictionaryGlobalRegion) {
        return getSqlMapClientTemplate().queryForList("DICTIONARY_GLOBAL_REGION.selectAllCity", dictionaryGlobalRegion);
    }

    public List<DictionaryGlobalRegion> findAreaList(DictionaryGlobalRegion dictionaryGlobalRegion) {
        return getSqlMapClientTemplate().queryForList("DICTIONARY_GLOBAL_REGION.selectAllArea", dictionaryGlobalRegion);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table
     * DICTIONARY_GLOBAL_REGION
     * 
     * @ibatorgenerated Fri Mar 18 14:05:07 CST 2011
     */
    public DictionaryGlobalRegionDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table
     * DICTIONARY_GLOBAL_REGION
     * 
     * @ibatorgenerated Fri Mar 18 14:05:07 CST 2011
     */
    public int deleteByPrimaryKey(Short regionId) {
        DictionaryGlobalRegion key = new DictionaryGlobalRegion();
        key.setRegionId(regionId);
        int rows = getSqlMapClientTemplate().delete("DICTIONARY_GLOBAL_REGION.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table
     * DICTIONARY_GLOBAL_REGION
     * 
     * @ibatorgenerated Fri Mar 18 14:05:07 CST 2011
     */
    public void insert(DictionaryGlobalRegion record) {
        getSqlMapClientTemplate().insert("DICTIONARY_GLOBAL_REGION.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table
     * DICTIONARY_GLOBAL_REGION
     * 
     * @ibatorgenerated Fri Mar 18 14:05:07 CST 2011
     */
    public void insertSelective(DictionaryGlobalRegion record) {
        getSqlMapClientTemplate().insert("DICTIONARY_GLOBAL_REGION.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table
     * DICTIONARY_GLOBAL_REGION
     * 
     * @ibatorgenerated Fri Mar 18 14:05:07 CST 2011
     */
    public DictionaryGlobalRegion selectByPrimaryKey(Short regionId) {
        DictionaryGlobalRegion key = new DictionaryGlobalRegion();
        key.setRegionId(regionId);
        DictionaryGlobalRegion record =
                (DictionaryGlobalRegion) getSqlMapClientTemplate().queryForObject(
                        "DICTIONARY_GLOBAL_REGION.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table
     * DICTIONARY_GLOBAL_REGION
     * 
     * @ibatorgenerated Fri Mar 18 14:05:07 CST 2011
     */
    public int updateByPrimaryKeySelective(DictionaryGlobalRegion record) {
        int rows =
                getSqlMapClientTemplate().update(
                        "DICTIONARY_GLOBAL_REGION.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table
     * DICTIONARY_GLOBAL_REGION
     * 
     * @ibatorgenerated Fri Mar 18 14:05:07 CST 2011
     */
    public int updateByPrimaryKey(DictionaryGlobalRegion record) {
        int rows =
                getSqlMapClientTemplate().update("DICTIONARY_GLOBAL_REGION.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    public Integer selectRegionIdByName(DictionaryGlobalRegion record) {
        // TODO Auto-generated method stub
        Integer id =
                (Integer) getSqlMapClientTemplate().queryForObject(
                        "DICTIONARY_GLOBAL_REGION.ibatorgenerated_selectRegionIdByName", record);
        return id;
    }

    /*
     * (non-Javadoc)
     * @see
     * com.mitian.airad.dao.DictionaryGlobalRegionDAO#selectEnByRegionName(com.mitian.airad.model.DictionaryGlobalRegion
     * )
     */
    public String selectEnByRegionName(DictionaryGlobalRegion record) {
        List<String> idList =
                getSqlMapClientTemplate().queryForList("DICTIONARY_GLOBAL_REGION.ibatorgenerated_selectEnByRegionName",
                        record);
        if (CollectionUtils.isNotEmpty(idList)) {
            String id = idList.get(0);
            return id;
        }
        else {
            return null;
        }
    }

    /**
     * 根据英文名称,类型,获取iD
     */
    public Integer selectIdByEnName(DictionaryGlobalRegion record) {
        // TODO Auto-generated method stub
        // TODO Auto-generated method stub
        Integer id = null;
        List<Integer> idList =
                getSqlMapClientTemplate().queryForList("DICTIONARY_GLOBAL_REGION.ibatorgenerated_selectIdByEnName",
                        record);
        if (idList != null && idList.size() > 0) {
            id = idList.get(0);
        }
        return id;
    }

    /*
     * (non-Javadoc)
     * @see com.mitian.airad.dao.DictionaryGlobalRegionDAO#selectAreaId(com.mitian.airad.model.DictionaryGlobalRegion)
     */
    public Integer selectAreaId(DictionaryGlobalRegion record) {
        // TODO Auto-generated method stub
        Integer id = null;
        List<Integer> idList =
                getSqlMapClientTemplate().queryForList("DICTIONARY_GLOBAL_REGION.ibatorgenerated_selectAreaId", record);
        if (idList != null && idList.size() > 0) {
            id = idList.get(0);
        }

        return id;
    }

    public DictionaryGlobalRegion queryDictionaryGlobalRegionByRegionName(String regionName) {
        DictionaryGlobalRegion key = new DictionaryGlobalRegion();
        key.setRegionName(regionName);
        List<DictionaryGlobalRegion> arr =
                getSqlMapClientTemplate().queryForList("DICTIONARY_GLOBAL_REGION.ibatorgenerated_selectByRegionName",
                        key);
        if (arr.size() > 0) {
            return arr.get(0);
        }
        return null;
    }
}
