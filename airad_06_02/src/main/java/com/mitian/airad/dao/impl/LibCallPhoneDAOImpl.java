package com.mitian.airad.dao.impl;

import org.springframework.stereotype.Repository;

import com.mitian.airad.dao.LibCallPhoneDAO;
import com.mitian.airad.dao.support.CustomSqlMapClientDaoSupport;
import com.mitian.airad.model.LibCallPhone;
import com.mitian.airad.model.LibTaobao;

@Repository
public class LibCallPhoneDAOImpl extends CustomSqlMapClientDaoSupport implements LibCallPhoneDAO {

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table LIB_TAOBAO
     * 
     * @ibatorgenerated Wed Jun 01 15:51:58 CST 2011
     */
    public LibCallPhoneDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table LIB_TAOBAO
     * 
     * @ibatorgenerated Wed Jun 01 15:51:58 CST 2011
     */
    public int deleteByPrimaryKey(Integer id) {
        LibCallPhone key = new LibCallPhone();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("LIB_CALLPHONE.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table LIB_TAOBAO
     * 
     * @ibatorgenerated Wed Jun 01 15:51:58 CST 2011
     */
    public void insert(LibCallPhone record) {
        getSqlMapClientTemplate().insert("LIB_CALLPHONE.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table LIB_TAOBAO
     * 
     * @ibatorgenerated Wed Jun 01 15:51:58 CST 2011
     */
    public Integer insertSelective(LibCallPhone record) {

        Integer res = (Integer) getSqlMapClientTemplate().insert("LIB_CALLPHONE.ibatorgenerated_insertSelective", record);
        return res;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table LIB_TAOBAO
     * 
     * @ibatorgenerated Wed Jun 01 15:51:58 CST 2011
     */
    public LibCallPhone selectByPrimaryKey(Integer id) {
        LibCallPhone key = new LibCallPhone();
        key.setId(id);
        LibCallPhone record =
                (LibCallPhone) getSqlMapClientTemplate().queryForObject("LIB_CALLPHONE.ibatorgenerated_selectByPrimaryKey",
                        key);
        return record;
    }

    public LibCallPhone selectByRichId(Integer richId) {
        LibCallPhone key = new LibCallPhone();
        key.setRichId(richId);
        LibCallPhone record =
                (LibCallPhone) getSqlMapClientTemplate().queryForObject("LIB_CALLPHONE.ibatorgenerated_selectByRechId", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table LIB_TAOBAO
     * 
     * @ibatorgenerated Wed Jun 01 15:51:58 CST 2011
     */
    public int updateByPrimaryKeySelective(LibCallPhone record) {
        int rows = getSqlMapClientTemplate().update("LIB_CALLPHONE.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table LIB_TAOBAO
     * 
     * @ibatorgenerated Wed Jun 01 15:51:58 CST 2011
     */
    public int updateByPrimaryKey(LibCallPhone record) {
        int rows = getSqlMapClientTemplate().update("LIB_CALLPHONE.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
}
