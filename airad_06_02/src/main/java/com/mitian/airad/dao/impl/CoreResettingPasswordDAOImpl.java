package com.mitian.airad.dao.impl;

import org.springframework.stereotype.Repository;

import com.mitian.airad.dao.CoreResettingPasswordDAO;
import com.mitian.airad.dao.support.CustomSqlMapClientDaoSupport;
import com.mitian.airad.model.CoreResettingPassword;

/**
 * CoreResettingPasswordDAOImpl.java
 * 
 * @author baojun
 */
@Repository
public class CoreResettingPasswordDAOImpl extends CustomSqlMapClientDaoSupport implements CoreResettingPasswordDAO {

    public int insertReturnId(CoreResettingPassword record) {
        int coreResettingPasswordId = -2;
        Object obj =
                getSqlMapClientTemplate().insert("CORE_RESETTING_PASSWORD.ibatorgenerated_insertSelective", record);
        if (null != obj) {
            coreResettingPasswordId = Integer.parseInt(obj.toString());
        }
        return coreResettingPasswordId;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table
     * CORE_RESETTING_PASSWORD
     * 
     * @ibatorgenerated Thu Feb 17 10:43:23 CST 2011
     */
    public CoreResettingPasswordDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table
     * CORE_RESETTING_PASSWORD
     * 
     * @ibatorgenerated Thu Feb 17 10:43:23 CST 2011
     */
    public int deleteByPrimaryKey(Integer resettingId) {
        CoreResettingPassword key = new CoreResettingPassword();
        key.setResettingId(resettingId);
        int rows = getSqlMapClientTemplate().delete("CORE_RESETTING_PASSWORD.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table
     * CORE_RESETTING_PASSWORD
     * 
     * @ibatorgenerated Thu Feb 17 10:43:23 CST 2011
     */
    public void insert(CoreResettingPassword record) {
        getSqlMapClientTemplate().insert("CORE_RESETTING_PASSWORD.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table
     * CORE_RESETTING_PASSWORD
     * 
     * @ibatorgenerated Thu Feb 17 10:43:23 CST 2011
     */
    public void insertSelective(CoreResettingPassword record) {
        getSqlMapClientTemplate().insert("CORE_RESETTING_PASSWORD.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table
     * CORE_RESETTING_PASSWORD
     * 
     * @ibatorgenerated Thu Feb 17 10:43:23 CST 2011
     */
    public CoreResettingPassword selectByPrimaryKey(Integer resettingId) {
        CoreResettingPassword key = new CoreResettingPassword();
        key.setResettingId(resettingId);
        CoreResettingPassword record =
                (CoreResettingPassword) getSqlMapClientTemplate().queryForObject(
                        "CORE_RESETTING_PASSWORD.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table
     * CORE_RESETTING_PASSWORD
     * 
     * @ibatorgenerated Thu Feb 17 10:43:23 CST 2011
     */
    public int updateByPrimaryKeySelective(CoreResettingPassword record) {
        int rows =
                getSqlMapClientTemplate().update("CORE_RESETTING_PASSWORD.ibatorgenerated_updateByPrimaryKeySelective",
                        record);

        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table
     * CORE_RESETTING_PASSWORD
     * 
     * @ibatorgenerated Thu Feb 17 10:43:23 CST 2011
     */
    public int updateByPrimaryKey(CoreResettingPassword record) {
        int rows =
                getSqlMapClientTemplate().update("CORE_RESETTING_PASSWORD.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /*
     * (non-Javadoc)
     * @see com.mitian.airad.dao.CoreResettingPasswordDAO#findByMemBerId(java.lang.Integer)
     */
    public CoreResettingPassword findByMemBerId(Long memberId, String resettingType) {
        CoreResettingPassword key = new CoreResettingPassword();
        key.setMemberId(memberId);
        key.setResettingType(resettingType);
        CoreResettingPassword record =
                (CoreResettingPassword) getSqlMapClientTemplate().queryForObject(
                        "CORE_RESETTING_PASSWORD.ibatorgenerated_selectByMemberId", key);
        return record;
    }

    /*
     * (non-Javadoc)
     * @seecom.mitian.airad.dao.CoreResettingPasswordDAO#updateRestingPasswordHistory(com.mitian.airad.model.
     * CoreResettingPassword)
     */
    public int updateRestingPasswordHistory(CoreResettingPassword record) {
        int rows = getSqlMapClientTemplate().update("CORE_RESETTING_PASSWORD.updateResettingPasswordHistory", record);

        return rows;

    }

    /*
     * 邮件失效，标志位处理 (non-Javadoc)
     * @see com.mitian.airad.dao.CoreResettingPasswordDAO#updateTag()
     */
    public int updateTag(CoreResettingPassword record) {
        int rows = getSqlMapClientTemplate().update("CORE_RESETTING_PASSWORD.updateTaging", record);
        return rows;
    }
}
