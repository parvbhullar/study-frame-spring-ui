package com.mitian.airad.dao.impl;

import org.springframework.stereotype.Repository;

import com.mitian.airad.dao.ReqWapRichDAO;
import com.mitian.airad.dao.support.CustomSqlMapClientDaoSupport;
import com.mitian.airad.model.ReqBanner;
import com.mitian.airad.model.ReqWapRich;

/**
 * ReqWapRichDAOImpl.java
 * 
 * @author baojun
 */
@Repository
public class ReqWapRichDAOImpl extends CustomSqlMapClientDaoSupport implements ReqWapRichDAO {

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table REQ_WAP_RICH
     * 
     * @ibatorgenerated Thu Feb 17 14:21:30 CST 2011
     */
    public ReqWapRichDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table REQ_WAP_RICH
     * 
     * @ibatorgenerated Thu Feb 17 14:21:30 CST 2011
     */
    public int deleteByPrimaryKey(Integer guideId) {
        ReqWapRich key = new ReqWapRich();
        key.setGuideId(guideId);
        int rows = getSqlMapClientTemplate().delete("REQ_WAP_RICH.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table REQ_WAP_RICH
     * 
     * @ibatorgenerated Thu Feb 17 14:21:30 CST 2011
     */
    public void insert(ReqWapRich record) {
        getSqlMapClientTemplate().insert("REQ_WAP_RICH.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table REQ_WAP_RICH
     * 
     * @ibatorgenerated Thu Feb 17 14:21:30 CST 2011
     */
    public void insertSelective(ReqWapRich record) {
        getSqlMapClientTemplate().insert("REQ_WAP_RICH.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table REQ_WAP_RICH
     * 
     * @ibatorgenerated Thu Feb 17 14:21:30 CST 2011
     */
    public ReqWapRich selectByPrimaryKey(Integer guideId) {
        ReqWapRich key = new ReqWapRich();
        key.setGuideId(guideId);
        ReqWapRich record =
                (ReqWapRich) getSqlMapClientTemplate().queryForObject(
                        "REQ_WAP_RICH.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table REQ_WAP_RICH
     * 
     * @ibatorgenerated Thu Feb 17 14:21:30 CST 2011
     */
    public int updateByPrimaryKeySelective(ReqWapRich record) {
        int rows = getSqlMapClientTemplate().update("REQ_WAP_RICH.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table REQ_WAP_RICH
     * 
     * @ibatorgenerated Thu Feb 17 14:21:30 CST 2011
     */
    public int updateByPrimaryKey(ReqWapRich record) {
        int rows = getSqlMapClientTemplate().update("REQ_WAP_RICH.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    public int insertRWR(ReqWapRich record) {
        int guideId = 0;
        Object obj = getSqlMapClientTemplate().insert("CORE_AD.insertRWR", record);
        if (null != obj && !"".equals(obj)) {
            guideId = Integer.parseInt(obj.toString());
        }
        return guideId;

    }

    public int insertReqWapRich(ReqWapRich record) {
        Object obj = getSqlMapClientTemplate().insert("REQ_WAP_RICH.ibatorgenerated_insertSelective", record);
        int guideId = 0;
        if (null != obj && !"".equals(obj)) {
            guideId = Integer.parseInt(obj.toString());
        }
        return guideId;
    }

    public int findByAdIdCount(Integer adId) {
        ReqBanner reqBanner = new ReqBanner();
        reqBanner.setAdId(adId);
        return (Integer) getSqlMapClientTemplate().queryForObject("REQ_WAP_RICH.findByAdIdCount", reqBanner);
    }
}
