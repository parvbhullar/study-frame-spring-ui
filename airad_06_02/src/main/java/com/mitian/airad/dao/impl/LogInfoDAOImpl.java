package com.mitian.airad.dao.impl;

import org.springframework.stereotype.Repository;

import com.mitian.airad.dao.LogInfoDAO;
import com.mitian.airad.dao.support.CustomSqlMapClientDaoSupport;
import com.mitian.airad.model.LogInfo;

/**
 * LogInfoDAOImpl.java
 * 
 * @author baojun
 */
@Repository
public class LogInfoDAOImpl extends CustomSqlMapClientDaoSupport implements LogInfoDAO {

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table LOG_INFO
     * 
     * @ibatorgenerated Mon Mar 21 15:11:15 CST 2011
     */
    public LogInfoDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table LOG_INFO
     * 
     * @ibatorgenerated Mon Mar 21 15:11:15 CST 2011
     */
    public int deleteByPrimaryKey(Integer logId) {
        LogInfo key = new LogInfo();
        key.setLogId(logId);
        int rows = getSqlMapClientTemplate().delete("LOG_INFO.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table LOG_INFO
     * 
     * @ibatorgenerated Mon Mar 21 15:11:15 CST 2011
     */
    public void insert(LogInfo record) {
        getSqlMapClientTemplate().insert("LOG_INFO.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table LOG_INFO
     * 
     * @ibatorgenerated Mon Mar 21 15:11:15 CST 2011
     */
    public void insertSelective(LogInfo record) {
        getSqlMapClientTemplate().insert("LOG_INFO.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table LOG_INFO
     * 
     * @ibatorgenerated Mon Mar 21 15:11:15 CST 2011
     */
    public LogInfo selectByPrimaryKey(Integer logId) {
        LogInfo key = new LogInfo();
        key.setLogId(logId);
        LogInfo record =
                (LogInfo) getSqlMapClientTemplate().queryForObject("LOG_INFO.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table LOG_INFO
     * 
     * @ibatorgenerated Mon Mar 21 15:11:15 CST 2011
     */
    public int updateByPrimaryKeySelective(LogInfo record) {
        int rows = getSqlMapClientTemplate().update("LOG_INFO.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table LOG_INFO
     * 
     * @ibatorgenerated Mon Mar 21 15:11:15 CST 2011
     */
    public int updateByPrimaryKey(LogInfo record) {
        int rows = getSqlMapClientTemplate().update("LOG_INFO.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
}
