package com.mitian.airad.dao;

import java.util.List;
import java.util.Map;

import com.mitian.airad.model.AiradDevmember;
import com.mitian.airad.model.CoreMemberInfo;

public interface CoreMemberInfoDAO {
    /**
     * 根据状态查找会员
     * 
     * @param devType
     * @return
     */
    List<CoreMemberInfo> selectMemberInfoByStatus(String devType);

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table CORE_MEMBER_INFO
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     */
    void insert(CoreMemberInfo record);

    /**
     * 动态插入数据，并返回ID
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     */
    int insertSelective(CoreMemberInfo record);

    /**
     * 动态插入数据，并返回ID
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     */
    int insertAiradDevmember(AiradDevmember airadDevmember);

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table CORE_MEMBER_INFO
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     */
    CoreMemberInfo getByMemberId(Long memberId);

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table CORE_MEMBER_INFO
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     */
    int updateByPrimaryKeySelective(CoreMemberInfo record);

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table CORE_MEMBER_INFO
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     */
    int updateByPrimaryKey(CoreMemberInfo record);

    /**
     * 根据email地址查找会员
     * 
     * @param email
     * @return
     */
    CoreMemberInfo selectByEmail(String email);

    CoreMemberInfo selectByAdvertiserId(Integer advertiserId);

    /**
     * 查询所有未删除会员
     * 
     * @param params
     * @return
     */
    List<CoreMemberInfo> findMemberAll(Map<String, Object> params);

    /**
     * 跟email，status查询会员数量
     * 
     * @return
     */
    int findCountByEmailAndStatus(Map<String, Object> params);

    /**
     * 修改会员类型
     * 
     * @param memberInfo
     */
    int updateMemberType(CoreMemberInfo memberInfo);
}
