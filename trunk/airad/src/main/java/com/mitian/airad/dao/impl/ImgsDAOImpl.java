package com.mitian.airad.dao.impl;

import com.mitian.airad.dao.ImgsDAO;
import com.mitian.airad.dao.support.CustomSqlMapClientDaoSupport;
import com.mitian.airad.model.Imgs;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import org.springframework.stereotype.Repository;

@Repository
public class ImgsDAOImpl extends CustomSqlMapClientDaoSupport implements ImgsDAO {

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IMGS
     * 
     * @ibatorgenerated Mon Feb 28 15:31:43 CST 2011
     */
    public ImgsDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IMGS
     * 
     * @ibatorgenerated Mon Feb 28 15:31:43 CST 2011
     */
    public int deleteByPrimaryKey(Integer imgId) {
        Imgs key = new Imgs();
        key.setImgId(imgId);
        int rows = getSqlMapClientTemplate().delete("IMGS.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IMGS
     * 
     * @ibatorgenerated Mon Feb 28 15:31:43 CST 2011
     */
    public int insert(Imgs record) {

        int imgId = 0;
        Object obj = getSqlMapClientTemplate().insert("IMGS.ibatorgenerated_insert", record);;
        if (null != obj && !"".equals(obj)) {
            imgId = Integer.parseInt(obj.toString());
            return imgId;
        }
        else {
            return 0;
        }
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IMGS
     * 
     * @ibatorgenerated Mon Feb 28 15:31:43 CST 2011
     */
    public void insertSelective(Imgs record) {
        getSqlMapClientTemplate().insert("IMGS.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IMGS
     * 
     * @ibatorgenerated Mon Feb 28 15:31:43 CST 2011
     */
    public Imgs selectByPrimaryKey(Integer imgId) {
        Imgs key = new Imgs();
        key.setImgId(imgId);
        Imgs record = (Imgs) getSqlMapClientTemplate().queryForObject("IMGS.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IMGS
     * 
     * @ibatorgenerated Mon Feb 28 15:31:43 CST 2011
     */
    public int updateByPrimaryKeySelective(Imgs record) {
        int rows = getSqlMapClientTemplate().update("IMGS.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IMGS
     * 
     * @ibatorgenerated Mon Feb 28 15:31:43 CST 2011
     */
    public int updateByPrimaryKeyWithBLOBs(Imgs record) {
        int rows = getSqlMapClientTemplate().update("IMGS.ibatorgenerated_updateByPrimaryKeyWithBLOBs", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IMGS
     * 
     * @ibatorgenerated Mon Feb 28 15:31:43 CST 2011
     */
    public int updateByPrimaryKeyWithoutBLOBs(Imgs record) {
        int rows = getSqlMapClientTemplate().update("IMGS.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
}
