package com.mitian.airad.dao.impl;

import com.mitian.airad.dao.ImgTypeDAO;
import com.mitian.airad.dao.support.CustomSqlMapClientDaoSupport;
import com.mitian.airad.model.ImgType;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import org.springframework.stereotype.Repository;

@Repository
public class ImgTypeDAOImpl extends CustomSqlMapClientDaoSupport implements ImgTypeDAO {

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IMG_TYPE
     * 
     * @ibatorgenerated Mon Feb 28 15:31:43 CST 2011
     */
    public ImgTypeDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IMG_TYPE
     * 
     * @ibatorgenerated Mon Feb 28 15:31:43 CST 2011
     */
    public int deleteByPrimaryKey(Integer imgTypeId) {
        ImgType key = new ImgType();
        key.setImgTypeId(imgTypeId);
        int rows = getSqlMapClientTemplate().delete("IMG_TYPE.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IMG_TYPE
     * 
     * @ibatorgenerated Mon Feb 28 15:31:43 CST 2011
     */
    public void insert(ImgType record) {
        getSqlMapClientTemplate().insert("IMG_TYPE.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IMG_TYPE
     * 
     * @ibatorgenerated Mon Feb 28 15:31:43 CST 2011
     */
    public void insertSelective(ImgType record) {
        getSqlMapClientTemplate().insert("IMG_TYPE.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IMG_TYPE
     * 
     * @ibatorgenerated Mon Feb 28 15:31:43 CST 2011
     */
    public ImgType selectByPrimaryKey(Integer imgTypeId) {
        ImgType key = new ImgType();
        key.setImgTypeId(imgTypeId);
        ImgType record =
                (ImgType) getSqlMapClientTemplate().queryForObject("IMG_TYPE.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IMG_TYPE
     * 
     * @ibatorgenerated Mon Feb 28 15:31:43 CST 2011
     */
    public int updateByPrimaryKeySelective(ImgType record) {
        int rows = getSqlMapClientTemplate().update("IMG_TYPE.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table IMG_TYPE
     * 
     * @ibatorgenerated Mon Feb 28 15:31:43 CST 2011
     */
    public int updateByPrimaryKey(ImgType record) {
        int rows = getSqlMapClientTemplate().update("IMG_TYPE.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
}
