package com.mitian.airad.dao;

import java.util.List;
import java.util.Map;

import com.mitian.airad.model.CoreApp;

public interface CoreAppDAO {
    /**
     * 根据时间段查找这段时间内的收益（排序）
     * 
     * @param params
     * @return
     */
    public List<CoreApp> selectByTimeSlot(Map<String, String> params);

    /**
     * 根据时间段查找这段时间内的收益,条数
     * 
     * @param params
     * @return
     */
    public int selectCountByTimeSlot(Map<String, String> params);

    /**
     * 查询详细信息
     * 
     * @param params
     * @return
     */
    public CoreApp findApp(Map<String, String> params);

    /**
     * 统计当天添加应用条数
     * 
     * @param app
     * @return
     */
    public List<CoreApp> findAppCountByDay(Map<String, String> params);

    /**
     * 应用统计（分页）
     * 
     * @param params
     * @return
     */
    public List<CoreApp> selectStatistic(Map<String, String> params);

    /**
     * 应用统计总条数
     * 
     * @param params
     * @return
     */
    public int findAppContStatistic(Map<String, String> params);

    /**
     * 查找所有（分页）
     * 
     * @param form
     * @return
     */
    public List<CoreApp> selectByAll(Map<String, String> params);

    /**
     * 查询总条数
     * 
     * @param form
     * @return
     */
    public int totalCount(Map<String, String> params);

    /**
     * 查询应用程序信息
     * 
     * @param startTime
     * @param endTime
     * @return
     */
    public List<CoreApp> findList(CoreApp app);

    /**
     * 根据应用id查询信息
     * 
     * @param appId
     * @return
     */
    public CoreApp appDetail(CoreApp app);

    /**
     * 查询总条数 根据name code blcking
     * 
     * @param app
     * @return
     */
    int findAppContByCodeAndNameAndBlcking(CoreApp app);

    /**
     * 根据name code blcking查询app 并分页
     * 
     * @param app
     * @return
     */
    List<CoreApp> findAppByCodeAndNameAndBlcking(Map<String, String> params);

    /**
     * 根据id查询app
     * 
     * @param id
     * @return
     */
    CoreApp findApp(Integer id);

    /**
     * 根据appCode查询App
     * 
     * @param appCode
     * @return
     */
    CoreApp findAppByAppCode(String appCode);

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table CORE_APP
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     */
    int deleteByPrimaryKey(Integer appId);

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table CORE_APP
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     */
    void insert(CoreApp record);

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table CORE_APP
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     */
    void insertSelective(CoreApp record);

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table CORE_APP
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     * @param memberId TODO
     */
    CoreApp selectByPrimaryKey(Integer appId, Long memberId);

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table CORE_APP
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     */
    int updateByPrimaryKeySelective(CoreApp record);

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table CORE_APP
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     */
    int updateByPrimaryKey(CoreApp record);
}
