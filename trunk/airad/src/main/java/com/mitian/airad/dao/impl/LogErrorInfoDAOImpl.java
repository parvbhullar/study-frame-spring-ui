package com.mitian.airad.dao.impl;

import com.mitian.airad.dao.LogErrorInfoDAO;
import com.mitian.airad.model.LogErrorInfo;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class LogErrorInfoDAOImpl extends SqlMapClientDaoSupport implements LogErrorInfoDAO {

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table LOG_ERROR_INFO
     * 
     * @ibatorgenerated Wed Mar 16 16:27:10 CST 2011
     */
    public LogErrorInfoDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table LOG_ERROR_INFO
     * 
     * @ibatorgenerated Wed Mar 16 16:27:10 CST 2011
     */
    public int deleteByPrimaryKey(Integer logId) {
        LogErrorInfo key = new LogErrorInfo();
        key.setLogId(logId);
        int rows = getSqlMapClientTemplate().delete("LOG_ERROR_INFO.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table LOG_ERROR_INFO
     * 
     * @ibatorgenerated Wed Mar 16 16:27:10 CST 2011
     */
    public void insert(LogErrorInfo record) {
        getSqlMapClientTemplate().insert("LOG_ERROR_INFO.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table LOG_ERROR_INFO
     * 
     * @ibatorgenerated Wed Mar 16 16:27:10 CST 2011
     */
    public void insertSelective(LogErrorInfo record) {
        getSqlMapClientTemplate().insert("LOG_ERROR_INFO.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table LOG_ERROR_INFO
     * 
     * @ibatorgenerated Wed Mar 16 16:27:10 CST 2011
     */
    public LogErrorInfo selectByPrimaryKey(Integer logId) {
        LogErrorInfo key = new LogErrorInfo();
        key.setLogId(logId);
        LogErrorInfo record =
                (LogErrorInfo) getSqlMapClientTemplate().queryForObject(
                        "LOG_ERROR_INFO.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table LOG_ERROR_INFO
     * 
     * @ibatorgenerated Wed Mar 16 16:27:10 CST 2011
     */
    public int updateByPrimaryKeySelective(LogErrorInfo record) {
        int rows =
                getSqlMapClientTemplate().update("LOG_ERROR_INFO.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table LOG_ERROR_INFO
     * 
     * @ibatorgenerated Wed Mar 16 16:27:10 CST 2011
     */
    public int updateByPrimaryKey(LogErrorInfo record) {
        int rows = getSqlMapClientTemplate().update("LOG_ERROR_INFO.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }
}
