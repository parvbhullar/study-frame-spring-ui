<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/aop
			http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

		 <context:component-scan base-package="com.mitian.airad.service"/>
      <context:component-scan base-package="com.mitian.airad.refreshable" />
       <context:component-scan base-package="com.mitian.airad.component.mail" />
      <!--
		 <tx:advice id="txAdvice" transaction-manager="transactionManager">
			  <tx:attributes>
				   <tx:method name="add*" propagation="REQUIRED"  rollback-for="Exception"/>
				   <tx:method name="create*" propagation="REQUIRED"  rollback-for="Exception"/>
				   <tx:method name="update*" propagation="REQUIRED"  rollback-for="Exception"/>
				   <tx:method name="delete*" propagation="REQUIRED"  rollback-for="Exception"/>
				   <tx:method name="*" read-only="true" />
			  </tx:attributes>
		 </tx:advice>

		 <aop:config>
			  <aop:pointcut id="allManagerMethod" expression="execution(* com.mitian.airad.service.*.*(..))" />
			  <aop:advisor advice-ref="txAdvice" pointcut-ref="allManagerMethod" />
		 </aop:config>
    -->
      <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
          <tx:method name="tx*" propagation="REQUIRED" rollback-for="Exception" />
        </tx:attributes>
      </tx:advice>

      <!-- auto proxy -->
      <aop:config proxy-target-class="true">
        <aop:advisor pointcut="execution(* com.mitian.airad.service.*Service.*(..))" advice-ref="txAdvice" />
      </aop:config>


		<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl" autowire="byName">
		     <property name="host" value="${mail.host}" />
		     <property name="username" value="${mail.username}" />
		     <property name="password" value="${mail.password}" />
		     <property name="javaMailProperties">
		         <props>
		             <prop key="mail.smtp.auth">true</prop>
                 <prop key="mail.smtp.timeout">25000</prop>
                 <prop key="mail.mime.charset">UTF-8</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
		         </props>
		     </property>
		</bean>
		<bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
          <property name="resourceLoaderPath" value="WEB-INF/config/template"></property> 
			<property name="velocityProperties">
				<props>
				<prop key="resource.loader">file</prop>
				<prop key="file.resource.loader.class">
				org.apache.velocity.runtime.resource.loader.FileResourceLoader
				</prop>
				<prop key="file.resource.loader.cache">false</prop>
                <prop key="input.encoding">utf-8</prop>
                <prop key="output.encoding">utf-8</prop>
				</props>
			</property>
		</bean>
  <!--②异步线程执行器-->
<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
  <property name="corePoolSize" value="10"/>
  <property name="maxPoolSize" value="30"/>
  <property name="keepAliveSeconds" value="200"/>
</bean>       
        <bean id="deploymentContextService"  class="com.mitian.airad.service.DeploymentContextService">
        <!--currentDeploymentType oss  airad  -->
        <property name="currentDeploymentType" value="${currentDeploymentType}"></property>
        <property name="hermesApplicationAdRequestUrl"  value="${hermesApplicationAdRequestUrl}"></property>
        <property name="hermesApplicationAdBannerRequestUrl" value="${hermesApplicationAdBannerRequestUrl}"></property>
        </bean>
        <bean id="taobaoOpenApiComponent"  class="com.mitian.airad.component.openapi.TaobaoOpenApiComponent">
            <property name="appKey" value="${taobao.appKey}"></property>
            <property name="appSecret"  value="${taobao.appSecret}"></property>
            <property name="apiUrl" value="${taobao.apiUrl}"></property>
            <property name="callBackUrl" value="${taobao.callbackUrl}"></property>
            <property name="oauthAuthUrl" value="${taobao.oauth.authUrl}"></property>
            <property name="oauthAccessTokenUrl" value="${taobao.oauth.accessTokenUrl}"></property>
        </bean>
</beans>