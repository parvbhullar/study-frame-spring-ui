package com.mitian.airad.dao.impl;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.mitian.airad.dao.StatAppDAO;
import com.mitian.airad.dao.support.CustomSqlMapClientDaoSupport;
import com.mitian.airad.model.StatApp;
import com.mitian.airad.utils.StringUtil;

/**
 * StatAppDAOImpl.java
 * 
 * @author baojun
 */
@Repository
public class StatAppDAOImpl extends CustomSqlMapClientDaoSupport implements StatAppDAO {

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table STAT_APP
     * 
     * @ibatorgenerated Wed Mar 09 15:41:05 CST 2011
     */
    public StatAppDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table STAT_APP
     * 
     * @ibatorgenerated Wed Mar 09 15:41:05 CST 2011
     */
    public int deleteByPrimaryKey(Integer shatAppId) {
        StatApp key = new StatApp();
        key.setShatAppId(shatAppId);
        int rows = getSqlMapClientTemplate().delete("STAT_APP.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table STAT_APP
     * 
     * @ibatorgenerated Wed Mar 09 15:41:05 CST 2011
     */
    public void insert(StatApp record) {
        getSqlMapClientTemplate().insert("STAT_APP.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table STAT_APP
     * 
     * @ibatorgenerated Wed Mar 09 15:41:05 CST 2011
     */
    public void insertSelective(StatApp record) {
        getSqlMapClientTemplate().insert("STAT_APP.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table STAT_APP
     * 
     * @ibatorgenerated Wed Mar 09 15:41:05 CST 2011
     */
    public StatApp selectByPrimaryKey(Integer shatAppId) {
        StatApp key = new StatApp();
        key.setShatAppId(shatAppId);
        StatApp record =
                (StatApp) getSqlMapClientTemplate().queryForObject("STAT_APP.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table STAT_APP
     * 
     * @ibatorgenerated Wed Mar 09 15:41:05 CST 2011
     */
    public int updateByPrimaryKeySelective(StatApp record) {
        int rows = getSqlMapClientTemplate().update("STAT_APP.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table STAT_APP
     * 
     * @ibatorgenerated Wed Mar 09 15:41:05 CST 2011
     */
    public int updateByPrimaryKey(StatApp record) {
        int rows = getSqlMapClientTemplate().update("STAT_APP.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * 应用程序（详细）
     * 
     * @param record
     * @return
     */
    @SuppressWarnings("unchecked")
    public List<StatApp> queryDetailList(Map<String, String> map) {
        int pageSize = StringUtil.stringToInteger(map.get("pageSize"));
        int currentPage = StringUtil.stringToInteger(map.get("currentPage")) - 1;
        int fromRecord = pageSize * currentPage;
        // 需要注释，因为数据不全的话就会缺少数据
        // map.put("fromRecord", String.valueOf(fromRecord));
        map.put("pageSize", String.valueOf(pageSize));
        List<StatApp> list = getSqlMapClientTemplate().queryForList("STAT_APP.queryDetailList", map);
        if (list.isEmpty()) {
            list = new ArrayList<StatApp>();
        }
        return list;
    }

    public List<StatApp> queryList(StatApp record) {
        List<StatApp> list = getSqlMapClientTemplate().queryForList("STAT_APP.querybyList", record);
        return list;
    }

    /**
     * 应用程序（汇总）
     * 
     * @param record
     * @return
     */
    @SuppressWarnings("unchecked")
    public List<StatApp> queryTotalList(Map<String, String> map) {
        int pageSize = StringUtil.stringToInteger(map.get("pageSize"));
        int currentPage = StringUtil.stringToInteger(map.get("currentPage")) - 1;
        int fromRecord = pageSize * currentPage;
        // 需要注释，因为数据不全的话就会缺少数据
        // map.put("fromRecord", String.valueOf(fromRecord));
        map.put("pageSize", String.valueOf(pageSize));
        List<StatApp> list = getSqlMapClientTemplate().queryForList("STAT_APP.queryTotalList", map);
        if (list.isEmpty()) {
            list = new ArrayList<StatApp>();
        }
        return list;
    }

    /**
     *所有
     * 
     * @param record
     * @return
     */
    @SuppressWarnings("unchecked")
    public List<StatApp> selectappDetailList(Map<String, String> map) {
        List<StatApp> list = getSqlMapClientTemplate().queryForList("STAT_APP.queryDetailList", map);
        if (list.isEmpty()) {
            list = new ArrayList<StatApp>();
        }
        return list;
    }

    @SuppressWarnings("unchecked")
    public List<StatApp> selectappTotalList(Map<String, String> map) {
        List<StatApp> list = getSqlMapClientTemplate().queryForList("STAT_APP.queryTotalList", map);
        if (list.isEmpty()) {
            list = new ArrayList<StatApp>();
        }
        return list;
    }

    public int statCountApp(StatApp paramStatApp) {
        Integer count =
                (Integer) getSqlMapClientTemplate().queryForObject("JOB_APP_AD_AGENT.appCountStat", paramStatApp);
        return count;
    }

    public void addJobStatApp(StatApp statApp) {
        getSqlMapClientTemplate().insert("STAT_APP.ibatorgenerated_insertSelective", statApp);
    }

    @SuppressWarnings("unchecked")
    public void addBeforeAppCode(StatApp paramStatApp) {
        List<StatApp> list =
                getSqlMapClientTemplate().queryForList("JOB_APP_AD_AGENT.before_appcode_count", paramStatApp);
        for (StatApp statApp : list) {
            statApp.setShowNum(0);
            statApp.setClickNum(0);
            statApp.setAdNum(0);
            BigDecimal a = new BigDecimal(0).setScale(2, BigDecimal.ROUND_HALF_UP);
            statApp.setClickRate(a);
            statApp.setPutRate(a);
            statApp.setJobStatType("0");
            statApp.setJobStatTime(new Date());
            statApp.setAddTime(paramStatApp.getAddTime());
            statApp.setOffer(a);
            getSqlMapClientTemplate().insert("STAT_APP.ibatorgenerated_insertSelective", statApp);
        }
    }

}
