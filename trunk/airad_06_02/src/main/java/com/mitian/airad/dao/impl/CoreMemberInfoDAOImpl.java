package com.mitian.airad.dao.impl;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.mitian.airad.dao.CoreMemberInfoDAO;
import com.mitian.airad.dao.support.CustomSqlMapClientDaoSupport;
import com.mitian.airad.model.AiradDevmember;
import com.mitian.airad.model.CoreMemberInfo;
import com.mitian.airad.utils.StringUtil;

/**
 * CoreMemberInfoDAOImpl.java
 * 
 * @author baojun
 */
@Repository
public class CoreMemberInfoDAOImpl extends CustomSqlMapClientDaoSupport implements CoreMemberInfoDAO {
    public List<CoreMemberInfo> selectMemberInfoByStatus(String devType) {
        List<CoreMemberInfo> memberInfo =
                getSqlMapClientTemplate().queryForList("CORE_MEMBER_INFO.selectMemberInfoByStatus", devType);
        return memberInfo;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table CORE_MEMBER_INFO
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     */
    public CoreMemberInfoDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table CORE_MEMBER_INFO
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     */
    public void insert(CoreMemberInfo record) {

        getSqlMapClientTemplate().insert("CORE_MEMBER_INFO.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table CORE_MEMBER_INFO
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     */
    public int insertSelective(CoreMemberInfo record) {
        Object obj = getSqlMapClientTemplate().insert("CORE_MEMBER_INFO.ibatorgenerated_insertSelective", record);
        int id = Integer.parseInt(obj.toString());
        return id;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table CORE_MEMBER_INFO
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     */
    public CoreMemberInfo getByMemberId(Long memberId) {
        CoreMemberInfo key = new CoreMemberInfo();
        key.setMemberId(memberId);
        CoreMemberInfo record =
                (CoreMemberInfo) getSqlMapClientTemplate().queryForObject("CORE_MEMBER_INFO.getByMemberId", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table CORE_MEMBER_INFO
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     */
    public int updateByPrimaryKeySelective(CoreMemberInfo record) {
        int rows =
                getSqlMapClientTemplate()
                        .update("CORE_MEMBER_INFO.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table CORE_MEMBER_INFO
     * 
     * @ibatorgenerated Thu Jan 20 16:39:10 CST 2011
     */
    public int updateByPrimaryKey(CoreMemberInfo record) {
        int rows = getSqlMapClientTemplate().update("CORE_MEMBER_INFO.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    public CoreMemberInfo selectByEmail(String email) {
        List<CoreMemberInfo> list = getSqlMapClientTemplate().queryForList("CORE_MEMBER_INFO.selectByEmail", email);
        CoreMemberInfo record = null;
        if (null != list && list.size() > 0) {
            record = list.get(0);
        }
        return record;
    }

    public CoreMemberInfo selectByAdvertiserId(Integer advertiserId) {
        CoreMemberInfo record =
                (CoreMemberInfo) getSqlMapClientTemplate().queryForObject("CORE_MEMBER_INFO.selectByAdvertiserId",
                        advertiserId);
        return record;
    }

    // public CoreMemberInfo activationUser(String activeCode, Long memberId) {
    // Map<String, Object> map = new HashMap<String, Object>(2);
    // map.put("activeCode", activeCode);
    // map.put("email", memberId);
    // getSqlMapClientTemplate().queryForObject("CORE_MEMBER_INFO.updateByEmail", map);
    // System.out.println("=================");
    // return null;
    // }

    /*
     * (non-Javadoc)
     * @see com.mitian.airad.dao.CoreMemberInfoDAO#findMemberAll()
     */
    public List<CoreMemberInfo> findMemberAll(Map<String, Object> params) {
        int pageSize = StringUtil.stringToInteger(params.get("pageSize").toString());
        int currentPage = StringUtil.stringToInteger(params.get("currentPage").toString()) - 1;
        int fromRecord = pageSize * currentPage;
        List<CoreMemberInfo> record =
                getSqlMapClientTemplate().queryForList("CORE_MEMBER_INFO.selectAll", params, fromRecord, pageSize);
        return record;
    }

    /*
     * (non-Javadoc)
     * @see com.mitian.airad.dao.CoreMemberInfoDAO#findCountByEmailAndStatus()
     */
    public int findCountByEmailAndStatus(Map<String, Object> params) {
        return (Integer) getSqlMapClientTemplate().queryForObject("CORE_MEMBER_INFO.selectCountByEmailAndStatus",
                params);
    }

    /*
     * (non-Javadoc)
     * @see com.mitian.airad.dao.CoreMemberInfoDAO#updateMemberType(com.mitian.airad.model.CoreMemberInfo)
     */
    public int updateMemberType(CoreMemberInfo memberInfo) {
        return getSqlMapClientTemplate().update("CORE_MEMBER_INFO.updateMemberType", memberInfo);
    }

    /**
     *开发者报名
     */
    public int insertAiradDevmember(AiradDevmember airadDevmember) {
        Object obj = getSqlMapClientTemplate().insert("AIRAD_DEVMEMBER.insertAiradDevmember", airadDevmember);
        return 1;
    }
}
