package com.mitian.airad.dao.impl;

import java.util.List;

import org.springframework.stereotype.Repository;

import com.mitian.airad.common.constant.AccMailNoticeConstant;
import com.mitian.airad.dao.AccMailNoticeDAO;
import com.mitian.airad.dao.support.CustomSqlMapClientDaoSupport;
import com.mitian.airad.model.AccMailNotice;

/**
 * AccMailNoticeDAOImpl.java
 * 
 * @author baojun
 */
@Repository
public class AccMailNoticeDAOImpl extends CustomSqlMapClientDaoSupport implements AccMailNoticeDAO {

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table ACC_MAIL_NOTICE
     * 
     * @ibatorgenerated Sat Feb 26 09:48:12 CST 2011
     */
    public AccMailNoticeDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table ACC_MAIL_NOTICE
     * 
     * @ibatorgenerated Sat Feb 26 09:48:12 CST 2011
     */
    public int deleteByPrimaryKey(Integer mailNoticeId) {
        AccMailNotice key = new AccMailNotice();
        key.setMailNoticeId(mailNoticeId);
        int rows = getSqlMapClientTemplate().delete("ACC_MAIL_NOTICE.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table ACC_MAIL_NOTICE
     * 
     * @ibatorgenerated Sat Feb 26 09:48:12 CST 2011
     */
    public void insert(AccMailNotice record) {
        getSqlMapClientTemplate().insert("ACC_MAIL_NOTICE.insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table ACC_MAIL_NOTICE
     * 
     * @ibatorgenerated Sat Feb 26 09:48:12 CST 2011
     */
    public AccMailNotice selectByPrimaryKey(Integer mailNoticeId) {
        AccMailNotice key = new AccMailNotice();
        key.setMailNoticeId(mailNoticeId);
        AccMailNotice record =
                (AccMailNotice) getSqlMapClientTemplate().queryForObject("ACC_MAIL_NOTICE.selectByMemberId", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table ACC_MAIL_NOTICE
     * 
     * @ibatorgenerated Sat Feb 26 09:48:12 CST 2011
     */
    public int updateByPrimaryKey(AccMailNotice record) {
        int rows = getSqlMapClientTemplate().update("ACC_MAIL_NOTICE.update", record);
        return rows;
    }

    /**
     * 根据会员id查询通知设置
     */
    public AccMailNotice selectByMemberId(Long memberId) {
        AccMailNotice key = new AccMailNotice();
        key.setMemberId(memberId);
        AccMailNotice record =
                (AccMailNotice) getSqlMapClientTemplate().queryForObject("ACC_MAIL_NOTICE.selectByMemberId", key);
        return record;
    }

    /*
     * (non-Javadoc)
     * @see com.mitian.airad.dao.AccMailNoticeDAO#queryAccMailNoticeAll()
     */
    public List<AccMailNotice> queryAccMailNoticeAll() {
        List<AccMailNotice> record =
                getSqlMapClientTemplate().queryForList("ACC_MAIL_NOTICE.ibatorgenerated_selectAll");
        return record;
    }

    /**
     * 获取需要发送余额提醒信的广告商列表 NOTICE_TYPE=1&&REMIND_FLAG=1&&TRIGGER_TYPE=2
     * 
     * @return
     */
    public List<AccMailNotice> getListForAdvertiserBalance(int offset, int returnSize) {
        AccMailNotice notice = new AccMailNotice();
        notice.setNoticeType(AccMailNoticeConstant.NOTICE_TYPE_ADVERTISER);
        notice.setRemindFlag(AccMailNoticeConstant.REMIND_FLAG_ON);
        notice.setTriggerType(AccMailNoticeConstant.TRIGGER_TYPE_JOB);
        notice.setOffset(offset);
        notice.setLimit(returnSize);
        return getSqlMapClientTemplate().queryForList("ACC_MAIL_NOTICE.getListByNoticeTypeAndTriggerType", notice);
    }

    /**
     * 获取需要发送余额提醒信的开发列表 NOTICE_TYPE=0&&REMIND_FLAG=1&&TRIGGER_TYPE=2
     * 
     * @return
     */
    public List<AccMailNotice> getListForDevBalance(int offset, int returnSize) {
        // TODO 待实现
        return null;
    }

    /*
     * (non-Javadoc)
     * @see com.mitian.airad.dao.AccMailNoticeDAO#getAdvertiserBalanceCount()
     */
    public Long getAdvertiserBalanceCount() {
        AccMailNotice notice = new AccMailNotice();
        notice.setNoticeType(AccMailNoticeConstant.NOTICE_TYPE_ADVERTISER);
        notice.setRemindFlag(AccMailNoticeConstant.REMIND_FLAG_ON);
        notice.setTriggerType(AccMailNoticeConstant.TRIGGER_TYPE_JOB);
        Long count = (Long) getSqlMapClientTemplate().queryForObject("ACC_MAIL_NOTICE.getCountByNoticeType", notice);
        return count;

    }

    /*
     * (non-Javadoc)
     * @see com.mitian.airad.dao.AccMailNoticeDAO#getDevBalanceCount()
     */
    public Long getDevBalanceCount() {
        // TODO Auto-generated method stub
        return null;
    }

    /*
     * (non-Javadoc)
     * @see com.mitian.airad.dao.AccMailNoticeDAO#updateRemindFlag(com.mitian.airad.model.AccMailNotice)
     */
    public int updateRemindFlag(AccMailNotice notice) {
        // TODO Auto-generated method stub
        return getSqlMapClientTemplate().update("ACC_MAIL_NOTICE.updateRemindFlag", notice);
    }
}
