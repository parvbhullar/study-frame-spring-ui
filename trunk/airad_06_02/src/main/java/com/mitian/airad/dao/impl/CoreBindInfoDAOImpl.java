package com.mitian.airad.dao.impl;

import java.util.Date;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.mitian.airad.dao.CoreBindInfoDAO;
import com.mitian.airad.dao.support.CustomSqlMapClientDaoSupport;
import com.mitian.airad.model.CoreBindInfo;

/**
 * CoreBindInfoDAOImpl.java
 * 
 * @author baojun
 */
@Repository
public class CoreBindInfoDAOImpl extends CustomSqlMapClientDaoSupport implements CoreBindInfoDAO {

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table CORE_BIND_INFO
     * 
     * @ibatorgenerated Wed Sep 07 16:13:32 CST 2011
     */
    public CoreBindInfoDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table CORE_BIND_INFO
     * 
     * @ibatorgenerated Wed Sep 07 16:13:32 CST 2011
     */
    public void insert(CoreBindInfo record) {
        getSqlMapClientTemplate().insert("CORE_BIND_INFO.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table CORE_BIND_INFO
     * 
     * @ibatorgenerated Wed Sep 07 16:13:32 CST 2011
     */
    public void insertSelective(CoreBindInfo record) {
        Date date = new Date();
        record.setAddTime(date);
        record.setUpdTime(date);
        getSqlMapClientTemplate().insert("CORE_BIND_INFO.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table CORE_BIND_INFO
     * 
     * @ibatorgenerated Wed Sep 07 16:13:32 CST 2011
     */
    public CoreBindInfo selectByPrimaryKey(Long id) {
        CoreBindInfo key = new CoreBindInfo();
        key.setId(id);
        CoreBindInfo record =
                (CoreBindInfo) getSqlMapClientTemplate().queryForObject(
                        "CORE_BIND_INFO.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table CORE_BIND_INFO
     * 
     * @ibatorgenerated Wed Sep 07 16:13:32 CST 2011
     */
    public int updateByPrimaryKeySelective(CoreBindInfo record) {
        record.setUpdTime(new Date());
        int rows =
                getSqlMapClientTemplate().update("CORE_BIND_INFO.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table CORE_BIND_INFO
     * 
     * @ibatorgenerated Wed Sep 07 16:13:32 CST 2011
     */
    public int updateByPrimaryKey(CoreBindInfo record) {
        int rows = getSqlMapClientTemplate().update("CORE_BIND_INFO.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    public CoreBindInfo selectOne(Map<String, Object> params) {
        return (CoreBindInfo) getSqlMapClientTemplate().queryForObject("CORE_BIND_INFO.selectOne", params);
    }

    // -------------------------自定义---------------------
    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table CORE_BIND_INFO
     * 
     * @ibatorgenerated Wed Sep 07 16:13:32 CST 2011
     */
    public int updateMemmberIdByEmailAndPlatPlatformType(CoreBindInfo record) {
        int rows = getSqlMapClientTemplate().update("CORE_BIND_INFO.updateMemmberIdByEmailAndPlatPlatformType", record);
        return rows;
    }

    public int selectUidByMemberIdAndPlatformType(CoreBindInfo record) {
        int rows = getSqlMapClientTemplate().update("CORE_BIND_INFO.updateMemmberIdByEmailAndPlatPlatformType", record);
        return rows;
    }

    public int updateMemmberIdByUidAndPlatPlatformType(CoreBindInfo record) {
        int rows = getSqlMapClientTemplate().update("CORE_BIND_INFO.updateMemmberIdByUidAndPlatPlatformType", record);
        return rows;
    }
}
