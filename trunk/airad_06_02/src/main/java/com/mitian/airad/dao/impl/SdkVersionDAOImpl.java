package com.mitian.airad.dao.impl;

import org.springframework.stereotype.Repository;

import com.mitian.airad.dao.SdkVersionDAO;
import com.mitian.airad.dao.support.CustomSqlMapClientDaoSupport;
import com.mitian.airad.model.SdkVersion;

/**
 * SdkVersionDAOImpl.java
 * 
 * @author baojun
 */
@Repository
public class SdkVersionDAOImpl extends CustomSqlMapClientDaoSupport implements SdkVersionDAO {

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table SDK_VERSION
     * 
     * @ibatorgenerated Thu Feb 17 14:53:14 CST 2011
     */
    public SdkVersionDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table SDK_VERSION
     * 
     * @ibatorgenerated Thu Feb 17 14:53:14 CST 2011
     */
    public int deleteByPrimaryKey(Integer sdkVId) {
        SdkVersion key = new SdkVersion();
        key.setSdkVId(sdkVId);
        int rows = getSqlMapClientTemplate().delete("SDK_VERSION.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table SDK_VERSION
     * 
     * @ibatorgenerated Thu Feb 17 14:53:14 CST 2011
     */
    public void insert(SdkVersion record) {
        getSqlMapClientTemplate().insert("SDK_VERSION.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table SDK_VERSION
     * 
     * @ibatorgenerated Thu Feb 17 14:53:14 CST 2011
     */
    public void insertSelective(SdkVersion record) {
        getSqlMapClientTemplate().insert("SDK_VERSION.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table SDK_VERSION
     * 
     * @ibatorgenerated Thu Feb 17 14:53:14 CST 2011
     */
    public SdkVersion selectByPrimaryKey(Integer sdkVId) {
        SdkVersion key = new SdkVersion();
        key.setSdkVId(sdkVId);
        SdkVersion record =
                (SdkVersion) getSqlMapClientTemplate().queryForObject("SDK_VERSION.ibatorgenerated_selectByPrimaryKey",
                        key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table SDK_VERSION
     * 
     * @ibatorgenerated Thu Feb 17 14:53:14 CST 2011
     */
    public int updateByPrimaryKeySelective(SdkVersion record) {
        int rows = getSqlMapClientTemplate().update("SDK_VERSION.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator. This method corresponds to the database table SDK_VERSION
     * 
     * @ibatorgenerated Thu Feb 17 14:53:14 CST 2011
     */
    public int updateByPrimaryKey(SdkVersion record) {
        int rows = getSqlMapClientTemplate().update("SDK_VERSION.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /*
     * (non-Javadoc)
     * @see com.mitian.airad.dao.SdkVersionDAO#selectBySdkVersion(java.lang.String)
     */
    public SdkVersion selectBySdkVersion(String sdkVersion, String osType) {
        SdkVersion key = new SdkVersion();
        key.setSdkVersion(sdkVersion);
        key.setOsType(osType);
        SdkVersion record =
                (SdkVersion) getSqlMapClientTemplate().queryForObject("SDK_VERSION.ibatorgenerated_selectBySdkVersion",
                        key);
        return record;
    }

    /*
     * (non-Javadoc)
     * @see com.mitian.airad.dao.SdkVersionDAO#findNewSdkVersion()
     */
    public SdkVersion findNewSdkVersion() {
        SdkVersion key = new SdkVersion();
        SdkVersion record =
                (SdkVersion) getSqlMapClientTemplate().queryForObject("SDK_VERSION.ibatorgenerated_selectNewVersion",
                        key);
        return record;
    }
}
